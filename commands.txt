Commands:-
```````````
$ ansible web -m copy -a 'content="Hello World" dest=/etc/motd'
$ ansible web -m shell -a "cat /etc/motd"
$ ansible -u root web --ask-pass -m raw -a 'yum install telnet -y'

Optimizing vim for YAML
-----------------------
In ~/.vimrc, include the following setting.
autocmd FileType yaml setlocal ai ts=2 sw=2 et

$ ansible-playbook --syntax-check install-vsftpd.yml ## Will perform a syntax check

-> Use -v[vvv] to increase output verbosity
   -> -v will show the task results
   -> -vv will show the task results and task configuration
   -> -vvv also shows information about connects to managed hosts
   -> -vvvv adds information about plug-ins, user used to run scripts and names of the scripts that executed

-> Use the -C opton to perform the dry run

Variables
---------
- {{ }}

  - inventory
  - include
  - local fact

Facts
  Conditionals

-> A variable is a label that is assigned to a specific value to make it easy to refer to that value throughout the playbook.
-> A fact is a special type of variable, that refers to a current state of an Ansible managed system.

o Variables can be defined in a vars block in the beginning of playbook.
 - hosts: all
   vars:
     web_package: httpd

o Alternatively, variables can be defined in a variable file, which will be included from the playbook.
 - hosts: all
   vars_files:
     - vars/users.yml

o If the variable is the first element, using quotes is mandatory


o Variables can be set different type of scope
  o Global Scope: this is when a variable is set from inventory or the command line
  o Play scope: this is applied when it is set from play
  o Host scope: this is applied when set in inventory or using a host variable inclusion

o When a variable is set from the command line, it'll overwrite anything else
  $ ansible-playbook site.yml -e "web_package=apache"


ansible-vault
-------------
o To create a encrypted file, use $ansible-vault create playbook.yml
o This command will prompt for a new password, and open the file in vi for further editing
o As an alternative for entering password on the prompt $ansible-vault create --vault-password-file=vault-pass playbook.yml
o To view a vault encrypted file, use $ansible-vault view playbook.yml
o To edit, use $$ansible-vault edit playbook.yml
o To encrypt $ansible-vault encrypt playbook.yml
o To decrypt $ansible-vault decrypt playbook.yml
